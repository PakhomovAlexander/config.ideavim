let mapleader=" "

""" Plugins  --------------------------------
set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
set textobj-entire
set ReplaceWithRegister
set exchange

""" My settings ------------------------------
set :nohlsearch

" Trying the new syntax
Plug 'machakann/vim-highlightedyank'
""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"
" <C-n> seems to me as a better solution than <M-n>,
" but we should finally support vim-visual-multi because vim-multiple-cursors is deprecated now
map <C-n> <Plug>NextWholeOccurrence

""" Common settings -------------------------
set showmode
set so=5
set incsearch
set nu

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray

""" My Mappings -----------------------------
""" map <leader>f <Plug>(easymotion-s)
""" map <leader>e <Plug>(easymotion-f)
""" map <leader>d <Action>(Debug)
""" map <leader>r <Action>(RenameElement)
""" map <leader>c <Action>(Stop)
""" map <leader>z <Action>(ToggleDistractionFreeMode)
""" map <leader>s <Action>(SelectInProjectView)
""" map <leader>a <Action>(Annotate)
""" map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
""" map <S-Space> <Action>(GotoNextError)

" Reformat the current line only
map <leader>l V<Action>(ReformatCode)
" map <leader>b <Action>(ToggleLineBreakpoint)
" map <leader>o <Action>(FileStructurePopup)
" map <leader>J Ji <ESC>


" My own mappings
map <leader>sg <Action>(Generate)
map <leader>sv <Action>(IntroduceVariable)
map <leader>sm <Action>(ExtractMethod)
map <leader>sm <Action>(ExtractMethod)
map <leader>sc <Action>(IntroduceConstant)

map <leader>kf <Action>(GotoFile)
map <leader>kc <Action>(GotoClass)

map <C-p> <Action>(Back)
map <C-n> <Action>(Forward)

map <leader>r <Action>(RenameElement)

map <leader>jd <Action>(GotoDeclaration)
map <leader>ji <Action>(GotoImplementation)
map <leader>jt <Action>(GotoTest)

map <leader>f <Plug>(easymotion-s)
map <leader>F <Action>(FindInPath)

map <leader>pr <Action>(ExternalSystem.RefreshAllProjects)
map <leader>ps <Action>(SelectInProjectView)
map <leader>pv <Action>(IdeaVim.ReloadVimRc.reload)

map <leader>gb <Action>(Annotate)

map <leader>hd <Action>(QuickJavaDoc)

map <leader>a <Action>(GotoAction)

map <leader>df <Action>(RunClass)
map <leader>dr <Action>(Run)
map <leader>db <Action>(Debug)


imap <C-i> <Action>(ParameterInfo)

map <leader>ke <Action>(RecentFiles)
map <leader>kj <Action>(FindInPath)
map <leader>/ <Action>(Find)

map <leader>e <Action>(GotoNextError)
map <leader>E <Action>(GotoPrevious1Error)


" Just makes me nervous
" map H h
" Toggle case and start typing. E.g. `<leader>iget`: `property` -> `getProperty`
" map <leader>i ~hi
" ReMove selection and toggle case. E.g. `v2l<leader>u`: `getProperty` -> `property`
" vmap <leader>u d~h
" I think it's a better solution
map U <C-R>






"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=10

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

